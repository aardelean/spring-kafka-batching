buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2"
    }
}
plugins {
    id 'com.palantir.docker' version '0.19.2'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'home'
version = '1.3'
sourceCompatibility = 1.9

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('javax.xml.bind:jaxb-api:2.2.8')

    compile('home:kafka-payload:1.2')
    compile('org.springframework.kafka:spring-kafka')

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile("org.springframework.data:spring-data-rest-webmvc:3.0.5.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-batch")
	runtime('org.postgresql:postgresql')

    compileOnly('org.projectlombok:lombok')

    testCompile('org.springframework.kafka:spring-kafka-test')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.mockito:mockito-core:2.8.9')
}

docker {
    def dockerVersion = System.getProperty('imageVersion') ? System.getProperty('imageVersion') : version
    files "build/libs/${rootProject.name}-${version}.jar",'run.sh'
    name "aardelean/${rootProject.name}:${dockerVersion}"
    dependsOn tasks.build
}